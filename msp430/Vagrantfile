# -*- mode: ruby -*-
# vi: set ft=ruby :
#
#	ubuntu_dev/msp430
#

$my_name = "dev-msp430"

# scripts
#
$post_install_script = <<SCRIPT
echo "*** ADDING groups {plugdev, dialout} to users {ubuntu, vagrant}"
gpasswd -a `whoami` plugdev
gpasswd -a `whoami` dialout
gpasswd -a vagrant plugdev
gpasswd -a vagrant dialout
echo "*** PURGING modemmanager"
apt-get purge -y modemmanager
echo "*** msp430 development environment ready for packaging"
SCRIPT

# Vagrantfile API/syntax version. Must be version 2
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "ubuntu_dev/basic"
  config.vm.box_version='0.4.1'
  # config.vm.box_url = 'http://www.tinyprod.net/boxes/ubuntu_dev-basic.json'
  config.vm.box_url = 'file:///Users/danome/Data/ubuntu_dev/basic/ubuntu_dev-basic.json'
  config.vm.box_download_checksum = 'ba8c3bc157bb777601a66aac8683ee8ca782de2749e146d1633561426583498e'
  config.vm.box_download_checksum_type = 'sha256'
  config.vm.box_check_update = true

  config.ssh.insert_key = false
  config.vm.provision "file", source: "../common/flasher.tgz", destination: "./flasher.tgz"
  config.vm.provision :shell, path: "../common/mspgcc_ti_tools_install.sh"
  config.vm.provision :shell, path: "../common/mspgcc46_tools_install.sh"
  config.vm.provision :shell, inline: $post_install_script
  config.vm.provision "shell", path: "../common/compact.sh"

  # Enable USB access
  usb_devs = [
    # Required for programming new fraunchpad
    ['0x2047', '0x0013', 'MSP4305969 Launchpad programmer'],
    ['0x2047', '0x0203', 'MSP4305969 Launchpad FW updater'],
    ['0x2047', '0x0204', 'MSP432 Launchpad FW updater'],
    # Other USB ids from TI's udev rules.
    ['0x2047', '0x0010', 'MSP430UIF (V3)'],
    ['0x2047', '0x0014', 'MSP430UIF'],
    ['0x2047', '0x0204', 'MSP430UIF'],
    # For older fraunchpads and launchpads
    ['0x0451', '0xf432', 'eZ430'],
    ['0x0451', '0xf430', 'MSP430UIF (V2)'],
    # Misc devices
    ['0x15ba', '0x0031', 'Olimex JTAG tiny'],
  ]

  config.vm.define $my_name do |config|
    config.vm.hostname = $my_name
    config.vm.provider "virtualbox" do |vb, override|
      vb.name = $my_name
      override.vm.synced_folder "~/", "/home/vagrant/home"

      vb.customize ["modifyvm", :id, "--memory", 1024]
      vb.customize ['modifyvm', :id, '--usb', 'on']
      usb_devs.each do |dev|
	vb.customize ['usbfilter', 'add', '0', '--target', :id, '--vendorid', dev[0], '--productid', dev[1], '--name', dev[2]]
      end
    end
  end
end
